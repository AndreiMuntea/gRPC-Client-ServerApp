// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AppService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Generated.Protobuf {

  /// <summary>Holder for reflection information generated from AppService.proto</summary>
  public static partial class AppServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for AppService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AppServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBBcHBTZXJ2aWNlLnByb3RvIi0KB1VzZXJEVE8SEAoIdXNlck5hbWUYASAB",
            "KAkSEAoIcGFzc3dvcmQYAiABKAkiPgoOQWdlQ2F0ZWdvcnlEVE8SDAoEbmFt",
            "ZRgBIAEoCRIOCgZtaW5BZ2UYAiABKAUSDgoGbWF4QWdlGAMgASgFIlEKDlBh",
            "cnRpY2lwYW50RFRPEgwKBG5hbWUYASABKAkSCwoDYWdlGAIgASgFEiQKC2Fn",
            "ZUNhdGVnb3J5GAMgASgLMg8uQWdlQ2F0ZWdvcnlEVE8iLAoIVHJpYWxEVE8S",
            "DAoEbmFtZRgBIAEoCRISCgpkaWZmaWN1bHR5GAIgASgFIsMBCgdSZXF1ZXN0",
            "EiEKC3JlcXVlc3RUeXBlGAEgASgOMgwuUmVxdWVzdFR5cGUSFgoEdXNlchgC",
            "IAEoCzIILlVzZXJEVE8SEQoJdHJpYWxOYW1lGAMgASgJEhcKD2FnZUNhdGVn",
            "b3J5TmFtZRgEIAEoCRIXCg9wYXJ0aWNpcGFudE5hbWUYBSABKAkSFgoOcGFy",
            "dGljaXBhbnRBZ2UYBiABKAUSDgoGdHJpYWxzGAcgAygJEhAKCHVzZXJuYW1l",
            "GAggASgJIuIBCghSZXNwb25zZRIjCgxyZXNwb25zZVR5cGUYASABKA4yDS5S",
            "ZXNwb25zZVR5cGUSJgoNYWdlQ2F0ZWdvcmllcxgCIAMoCzIPLkFnZUNhdGVn",
            "b3J5RFRPEhkKBnRyaWFscxgDIAMoCzIJLlRyaWFsRFRPEiUKDHBhcnRpY2lw",
            "YW50cxgEIAMoCzIPLlBhcnRpY2lwYW50RFRPEhcKD2FnZUNhdGVnb3J5TmFt",
            "ZRgFIAEoCRIYChByZWdpc3RlcmVkVHJpYWxzGAYgAygJEhQKDGVycm9yTWVz",
            "c2FnZRgHIAEoCSreAQoLUmVxdWVzdFR5cGUSEgoOVW5rbm93blJlcXVlc3QQ",
            "ABIQCgxMb2dpblJlcXVlc3QQARIRCg1Mb2dvdXRSZXF1ZXN0EAISFAoQR2V0",
            "VHJpYWxzUmVxdWVzdBADEhsKF0dldEFnZUNhdGVnb3JpZXNSZXF1ZXN0EAQS",
            "IgoeR2V0UGFydGljaXBhbnRzRm9yVHJpYWxSZXF1ZXN0EAUSHgoaUmVnaXN0",
            "ZXJQYXJ0aWNpcGFudFJlcXVlc3QQBhIfChtJbml0aWFsaXNlQ29ubmVjdGlv",
            "blJlcXVlc3QQByqtAQoMUmVzcG9uc2VUeXBlEhIKDkludmFsaWRSZXF1ZXN0",
            "EAASDgoKT2tSZXNwb25zZRABEhMKD0ZhaWx1cmVSZXNwb25zZRACEhUKEUdl",
            "dFRyaWFsc1Jlc3BvbnNlEAMSHAoYR2V0QWdlQ2F0ZWdvcmllc1Jlc3BvbnNl",
            "EAQSGwoXR2V0UGFydGljaXBhbnRzUmVzcG9uc2UQBRISCg5VcGRhdGVSZXNw",
            "b25zZRAGMjQKCkFwcFNlcnZpY2USJgoLc2VuZFJlcXVlc3QSCC5SZXF1ZXN0",
            "GgkuUmVzcG9uc2UoATABQisKEkdlbmVyYXRlZC5Qcm90b2J1ZlABqgISR2Vu",
            "ZXJhdGVkLlByb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Generated.Protobuf.RequestType), typeof(global::Generated.Protobuf.ResponseType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.UserDTO), global::Generated.Protobuf.UserDTO.Parser, new[]{ "UserName", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.AgeCategoryDTO), global::Generated.Protobuf.AgeCategoryDTO.Parser, new[]{ "Name", "MinAge", "MaxAge" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.ParticipantDTO), global::Generated.Protobuf.ParticipantDTO.Parser, new[]{ "Name", "Age", "AgeCategory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.TrialDTO), global::Generated.Protobuf.TrialDTO.Parser, new[]{ "Name", "Difficulty" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.Request), global::Generated.Protobuf.Request.Parser, new[]{ "RequestType", "User", "TrialName", "AgeCategoryName", "ParticipantName", "ParticipantAge", "Trials", "Username" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.Response), global::Generated.Protobuf.Response.Parser, new[]{ "ResponseType", "AgeCategories", "Trials", "Participants", "AgeCategoryName", "RegisteredTrials", "ErrorMessage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// ------------- REQUESTS -------------
  /// </summary>
  public enum RequestType {
    [pbr::OriginalName("UnknownRequest")] UnknownRequest = 0,
    [pbr::OriginalName("LoginRequest")] LoginRequest = 1,
    [pbr::OriginalName("LogoutRequest")] LogoutRequest = 2,
    [pbr::OriginalName("GetTrialsRequest")] GetTrialsRequest = 3,
    [pbr::OriginalName("GetAgeCategoriesRequest")] GetAgeCategoriesRequest = 4,
    [pbr::OriginalName("GetParticipantsForTrialRequest")] GetParticipantsForTrialRequest = 5,
    [pbr::OriginalName("RegisterParticipantRequest")] RegisterParticipantRequest = 6,
    [pbr::OriginalName("InitialiseConnectionRequest")] InitialiseConnectionRequest = 7,
  }

  /// <summary>
  /// ------------- RESPONSES -------------
  /// </summary>
  public enum ResponseType {
    [pbr::OriginalName("InvalidRequest")] InvalidRequest = 0,
    [pbr::OriginalName("OkResponse")] OkResponse = 1,
    [pbr::OriginalName("FailureResponse")] FailureResponse = 2,
    [pbr::OriginalName("GetTrialsResponse")] GetTrialsResponse = 3,
    [pbr::OriginalName("GetAgeCategoriesResponse")] GetAgeCategoriesResponse = 4,
    [pbr::OriginalName("GetParticipantsResponse")] GetParticipantsResponse = 5,
    [pbr::OriginalName("UpdateResponse")] UpdateResponse = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  /// ------------- DTOS -------------
  /// </summary>
  public sealed partial class UserDTO : pb::IMessage<UserDTO> {
    private static readonly pb::MessageParser<UserDTO> _parser = new pb::MessageParser<UserDTO>(() => new UserDTO());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDTO(UserDTO other) : this() {
      userName_ = other.userName_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDTO Clone() {
      return new UserDTO(this);
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserDTO other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AgeCategoryDTO : pb::IMessage<AgeCategoryDTO> {
    private static readonly pb::MessageParser<AgeCategoryDTO> _parser = new pb::MessageParser<AgeCategoryDTO>(() => new AgeCategoryDTO());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgeCategoryDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgeCategoryDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgeCategoryDTO(AgeCategoryDTO other) : this() {
      name_ = other.name_;
      minAge_ = other.minAge_;
      maxAge_ = other.maxAge_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgeCategoryDTO Clone() {
      return new AgeCategoryDTO(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "minAge" field.</summary>
    public const int MinAgeFieldNumber = 2;
    private int minAge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinAge {
      get { return minAge_; }
      set {
        minAge_ = value;
      }
    }

    /// <summary>Field number for the "maxAge" field.</summary>
    public const int MaxAgeFieldNumber = 3;
    private int maxAge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxAge {
      get { return maxAge_; }
      set {
        maxAge_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgeCategoryDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgeCategoryDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (MinAge != other.MinAge) return false;
      if (MaxAge != other.MaxAge) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MinAge != 0) hash ^= MinAge.GetHashCode();
      if (MaxAge != 0) hash ^= MaxAge.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (MinAge != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinAge);
      }
      if (MaxAge != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxAge);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MinAge != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinAge);
      }
      if (MaxAge != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxAge);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgeCategoryDTO other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MinAge != 0) {
        MinAge = other.MinAge;
      }
      if (other.MaxAge != 0) {
        MaxAge = other.MaxAge;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            MinAge = input.ReadInt32();
            break;
          }
          case 24: {
            MaxAge = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantDTO : pb::IMessage<ParticipantDTO> {
    private static readonly pb::MessageParser<ParticipantDTO> _parser = new pb::MessageParser<ParticipantDTO>(() => new ParticipantDTO());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantDTO(ParticipantDTO other) : this() {
      name_ = other.name_;
      age_ = other.age_;
      AgeCategory = other.ageCategory_ != null ? other.AgeCategory.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantDTO Clone() {
      return new ParticipantDTO(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 2;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "ageCategory" field.</summary>
    public const int AgeCategoryFieldNumber = 3;
    private global::Generated.Protobuf.AgeCategoryDTO ageCategory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.Protobuf.AgeCategoryDTO AgeCategory {
      get { return ageCategory_; }
      set {
        ageCategory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Age != other.Age) return false;
      if (!object.Equals(AgeCategory, other.AgeCategory)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (ageCategory_ != null) hash ^= AgeCategory.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Age != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Age);
      }
      if (ageCategory_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AgeCategory);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (ageCategory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgeCategory);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantDTO other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.ageCategory_ != null) {
        if (ageCategory_ == null) {
          ageCategory_ = new global::Generated.Protobuf.AgeCategoryDTO();
        }
        AgeCategory.MergeFrom(other.AgeCategory);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Age = input.ReadInt32();
            break;
          }
          case 26: {
            if (ageCategory_ == null) {
              ageCategory_ = new global::Generated.Protobuf.AgeCategoryDTO();
            }
            input.ReadMessage(ageCategory_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrialDTO : pb::IMessage<TrialDTO> {
    private static readonly pb::MessageParser<TrialDTO> _parser = new pb::MessageParser<TrialDTO>(() => new TrialDTO());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrialDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrialDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrialDTO(TrialDTO other) : this() {
      name_ = other.name_;
      difficulty_ = other.difficulty_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrialDTO Clone() {
      return new TrialDTO(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 2;
    private int difficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrialDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrialDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Difficulty != other.Difficulty) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Difficulty != 0) hash ^= Difficulty.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Difficulty);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Difficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Difficulty);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrialDTO other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Difficulty != 0) {
        Difficulty = other.Difficulty;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Difficulty = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      requestType_ = other.requestType_;
      User = other.user_ != null ? other.User.Clone() : null;
      trialName_ = other.trialName_;
      ageCategoryName_ = other.ageCategoryName_;
      participantName_ = other.participantName_;
      participantAge_ = other.participantAge_;
      trials_ = other.trials_.Clone();
      username_ = other.username_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "requestType" field.</summary>
    public const int RequestTypeFieldNumber = 1;
    private global::Generated.Protobuf.RequestType requestType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.Protobuf.RequestType RequestType {
      get { return requestType_; }
      set {
        requestType_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Generated.Protobuf.UserDTO user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.Protobuf.UserDTO User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "trialName" field.</summary>
    public const int TrialNameFieldNumber = 3;
    private string trialName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrialName {
      get { return trialName_; }
      set {
        trialName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ageCategoryName" field.</summary>
    public const int AgeCategoryNameFieldNumber = 4;
    private string ageCategoryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgeCategoryName {
      get { return ageCategoryName_; }
      set {
        ageCategoryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participantName" field.</summary>
    public const int ParticipantNameFieldNumber = 5;
    private string participantName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantName {
      get { return participantName_; }
      set {
        participantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participantAge" field.</summary>
    public const int ParticipantAgeFieldNumber = 6;
    private int participantAge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParticipantAge {
      get { return participantAge_; }
      set {
        participantAge_ = value;
      }
    }

    /// <summary>Field number for the "trials" field.</summary>
    public const int TrialsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_trials_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> trials_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Trials {
      get { return trials_; }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 8;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestType != other.RequestType) return false;
      if (!object.Equals(User, other.User)) return false;
      if (TrialName != other.TrialName) return false;
      if (AgeCategoryName != other.AgeCategoryName) return false;
      if (ParticipantName != other.ParticipantName) return false;
      if (ParticipantAge != other.ParticipantAge) return false;
      if(!trials_.Equals(other.trials_)) return false;
      if (Username != other.Username) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestType != 0) hash ^= RequestType.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (TrialName.Length != 0) hash ^= TrialName.GetHashCode();
      if (AgeCategoryName.Length != 0) hash ^= AgeCategoryName.GetHashCode();
      if (ParticipantName.Length != 0) hash ^= ParticipantName.GetHashCode();
      if (ParticipantAge != 0) hash ^= ParticipantAge.GetHashCode();
      hash ^= trials_.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestType);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (TrialName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TrialName);
      }
      if (AgeCategoryName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AgeCategoryName);
      }
      if (ParticipantName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ParticipantName);
      }
      if (ParticipantAge != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ParticipantAge);
      }
      trials_.WriteTo(output, _repeated_trials_codec);
      if (Username.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Username);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestType);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (TrialName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrialName);
      }
      if (AgeCategoryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AgeCategoryName);
      }
      if (ParticipantName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantName);
      }
      if (ParticipantAge != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParticipantAge);
      }
      size += trials_.CalculateSize(_repeated_trials_codec);
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.RequestType != 0) {
        RequestType = other.RequestType;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Generated.Protobuf.UserDTO();
        }
        User.MergeFrom(other.User);
      }
      if (other.TrialName.Length != 0) {
        TrialName = other.TrialName;
      }
      if (other.AgeCategoryName.Length != 0) {
        AgeCategoryName = other.AgeCategoryName;
      }
      if (other.ParticipantName.Length != 0) {
        ParticipantName = other.ParticipantName;
      }
      if (other.ParticipantAge != 0) {
        ParticipantAge = other.ParticipantAge;
      }
      trials_.Add(other.trials_);
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            requestType_ = (global::Generated.Protobuf.RequestType) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Generated.Protobuf.UserDTO();
            }
            input.ReadMessage(user_);
            break;
          }
          case 26: {
            TrialName = input.ReadString();
            break;
          }
          case 34: {
            AgeCategoryName = input.ReadString();
            break;
          }
          case 42: {
            ParticipantName = input.ReadString();
            break;
          }
          case 48: {
            ParticipantAge = input.ReadInt32();
            break;
          }
          case 58: {
            trials_.AddEntriesFrom(input, _repeated_trials_codec);
            break;
          }
          case 66: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      responseType_ = other.responseType_;
      ageCategories_ = other.ageCategories_.Clone();
      trials_ = other.trials_.Clone();
      participants_ = other.participants_.Clone();
      ageCategoryName_ = other.ageCategoryName_;
      registeredTrials_ = other.registeredTrials_.Clone();
      errorMessage_ = other.errorMessage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "responseType" field.</summary>
    public const int ResponseTypeFieldNumber = 1;
    private global::Generated.Protobuf.ResponseType responseType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.Protobuf.ResponseType ResponseType {
      get { return responseType_; }
      set {
        responseType_ = value;
      }
    }

    /// <summary>Field number for the "ageCategories" field.</summary>
    public const int AgeCategoriesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Generated.Protobuf.AgeCategoryDTO> _repeated_ageCategories_codec
        = pb::FieldCodec.ForMessage(18, global::Generated.Protobuf.AgeCategoryDTO.Parser);
    private readonly pbc::RepeatedField<global::Generated.Protobuf.AgeCategoryDTO> ageCategories_ = new pbc::RepeatedField<global::Generated.Protobuf.AgeCategoryDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Generated.Protobuf.AgeCategoryDTO> AgeCategories {
      get { return ageCategories_; }
    }

    /// <summary>Field number for the "trials" field.</summary>
    public const int TrialsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Generated.Protobuf.TrialDTO> _repeated_trials_codec
        = pb::FieldCodec.ForMessage(26, global::Generated.Protobuf.TrialDTO.Parser);
    private readonly pbc::RepeatedField<global::Generated.Protobuf.TrialDTO> trials_ = new pbc::RepeatedField<global::Generated.Protobuf.TrialDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Generated.Protobuf.TrialDTO> Trials {
      get { return trials_; }
    }

    /// <summary>Field number for the "participants" field.</summary>
    public const int ParticipantsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Generated.Protobuf.ParticipantDTO> _repeated_participants_codec
        = pb::FieldCodec.ForMessage(34, global::Generated.Protobuf.ParticipantDTO.Parser);
    private readonly pbc::RepeatedField<global::Generated.Protobuf.ParticipantDTO> participants_ = new pbc::RepeatedField<global::Generated.Protobuf.ParticipantDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Generated.Protobuf.ParticipantDTO> Participants {
      get { return participants_; }
    }

    /// <summary>Field number for the "ageCategoryName" field.</summary>
    public const int AgeCategoryNameFieldNumber = 5;
    private string ageCategoryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgeCategoryName {
      get { return ageCategoryName_; }
      set {
        ageCategoryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registeredTrials" field.</summary>
    public const int RegisteredTrialsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_registeredTrials_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> registeredTrials_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RegisteredTrials {
      get { return registeredTrials_; }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 7;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseType != other.ResponseType) return false;
      if(!ageCategories_.Equals(other.ageCategories_)) return false;
      if(!trials_.Equals(other.trials_)) return false;
      if(!participants_.Equals(other.participants_)) return false;
      if (AgeCategoryName != other.AgeCategoryName) return false;
      if(!registeredTrials_.Equals(other.registeredTrials_)) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseType != 0) hash ^= ResponseType.GetHashCode();
      hash ^= ageCategories_.GetHashCode();
      hash ^= trials_.GetHashCode();
      hash ^= participants_.GetHashCode();
      if (AgeCategoryName.Length != 0) hash ^= AgeCategoryName.GetHashCode();
      hash ^= registeredTrials_.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ResponseType);
      }
      ageCategories_.WriteTo(output, _repeated_ageCategories_codec);
      trials_.WriteTo(output, _repeated_trials_codec);
      participants_.WriteTo(output, _repeated_participants_codec);
      if (AgeCategoryName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AgeCategoryName);
      }
      registeredTrials_.WriteTo(output, _repeated_registeredTrials_codec);
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ErrorMessage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseType);
      }
      size += ageCategories_.CalculateSize(_repeated_ageCategories_codec);
      size += trials_.CalculateSize(_repeated_trials_codec);
      size += participants_.CalculateSize(_repeated_participants_codec);
      if (AgeCategoryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AgeCategoryName);
      }
      size += registeredTrials_.CalculateSize(_repeated_registeredTrials_codec);
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.ResponseType != 0) {
        ResponseType = other.ResponseType;
      }
      ageCategories_.Add(other.ageCategories_);
      trials_.Add(other.trials_);
      participants_.Add(other.participants_);
      if (other.AgeCategoryName.Length != 0) {
        AgeCategoryName = other.AgeCategoryName;
      }
      registeredTrials_.Add(other.registeredTrials_);
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            responseType_ = (global::Generated.Protobuf.ResponseType) input.ReadEnum();
            break;
          }
          case 18: {
            ageCategories_.AddEntriesFrom(input, _repeated_ageCategories_codec);
            break;
          }
          case 26: {
            trials_.AddEntriesFrom(input, _repeated_trials_codec);
            break;
          }
          case 34: {
            participants_.AddEntriesFrom(input, _repeated_participants_codec);
            break;
          }
          case 42: {
            AgeCategoryName = input.ReadString();
            break;
          }
          case 50: {
            registeredTrials_.AddEntriesFrom(input, _repeated_registeredTrials_codec);
            break;
          }
          case 58: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
